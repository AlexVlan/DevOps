##make dir db git
git init
##check status git 
git status
##git file 
git add * OR git add file
##git commit 
git commit -m "comment"

#the manage version files
#check history modify 
git log
git log -1 #check one end commit
git log -1 -p #show what the was modify in file
#how return before version file, if it to change
git checkout -- file

#chech modify before send 
git diff --staged

#ignore file/dir
make file .gitignore and add to all what need to ignor

#clone the reposotory to you local git
git clone https://github.com/AlexVlan/postgresql.git #url with github rep

#send all to github
git push origin
git push 

#show connect rep
git remote -v
#delete remote rep
git remote rm origin

#Change keys for linux:
1)ssh-keygen 
2)copy ~/.ssh k.pem to git(lab/hub) 
3)change url for clone 
git remote set-url origin git@gitlab.com:frfrffrfrfrrfrffr.git

#work to with branch 
git branch            #show branch 
git branch name       #make branch 
git checkout name     #get to branche "name"
git branch -d name    #delete branch
git checkout -b name  #create and get to branch

git merge name        #connect to branches in one branche "main"

#Back to before version
git checkout "commfvdvsdvvrefvdfv98998vfsdfve" #check commit with number commit #TEMP#
git checkout main #go to back from end version

git commit --amend #change end commit, name, comment

git reset --hard HEAD~1 #Connect to commit less number ~1 or any number
git reset --soft HEAD~1 #delete all history commit from log. To stay only end file and one commit
